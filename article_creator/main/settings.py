"""
Django settings for transped project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

import os
import os.path
from pathlib import Path

from main.src.settings import SystemSettingsHandler
from main.src.constants import STATIC_DIR, CONFIG_DIR

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# =============================================================================

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATIC_URL = STATIC_DIR

ROOT_URLCONF = "main.urls"
WSGI_APPLICATION = "main.wsgi.application"

# https://docs.djangoproject.com/en/4.2/topics/i18n/
LANGUAGE_CODE = "pl-PL"
TIME_ZONE = "UTC"
USE_I18N = True
USE_TZ = True

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"

# =============================================================================

# Prepare system handler and load config
SYSTEM_HANDLER = SystemSettingsHandler(
    system_cfg_filename=str(
        os.path.join(CONFIG_DIR, SystemSettingsHandler.system_cfg_filename)
    ),
    secret_key_filename=str(
        os.path.join(CONFIG_DIR, SystemSettingsHandler.secret_key_filename)
    ),
    load_config=True,
    use_environment=True,
)

# NOTE: to load secret key from env use: load_secret_key(filepath=None)
SECRET_KEY = SYSTEM_HANDLER.load_secret_key(
    filepath=SYSTEM_HANDLER.secret_key_filename
)

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = SYSTEM_HANDLER.debug()

# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = SYSTEM_HANDLER.database()

DEFAULT_APP_LANGUAGE = SYSTEM_HANDLER.default_language()

MAIN_API_URL = SYSTEM_HANDLER.api_version_url()

# =============================================================================

ALLOWED_HOSTS = SYSTEM_HANDLER.allowed_hosts()

# =============================================================================

MAIN_LOGGER = SYSTEM_HANDLER.logger()

# =============================================================================

# Application definition
INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
]

INSTALLED_APPS += SYSTEM_HANDLER.installed_apps()

# =============================================================================

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

# =============================================================================

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

# =============================================================================

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

# =============================================================================

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    "DEFAULT_PERMISSION_CLASSES": ["rest_framework.permissions.IsAuthenticated"],
    "DEFAULT_RENDERER_CLASSES": [
        "rest_framework.renderers.JSONRenderer",
        "rest_framework.renderers.BrowsableAPIRenderer",
    ],
    "PAGE_SIZE": 10,
    # 'DATETIME_FORMAT': '%s000',
    "DEFAULT_PAGINATION_CLASS": "rest_framework.pagination.PageNumberPagination",
}

DATA_UPLOAD_MAX_MEMORY_SIZE = int(
    os.environ.get("DATA_UPLOAD_MAX_MEMORY_SIZE", 5242880)
)


if SYSTEM_HANDLER.use_kc_auth:
    import keycloak

    INSTALLED_APPS.append(keycloak.app_name)
    MIDDLEWARE.append(keycloak.default_middleware_class)
    REST_FRAMEWORK["DEFAULT_AUTHENTICATION_CLASSES"] = [keycloak.default_auth_class]
else:
    INSTALLED_APPS.append("rest_framework.authtoken")
    REST_FRAMEWORK["DEFAULT_AUTHENTICATION_CLASSES"] = [
        "rest_framework.authentication.TokenAuthentication"
    ]
